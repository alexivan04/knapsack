import random

def generate_knapsack_tests(num_tests=5, max_items=10, max_capacity=50, max_weight=20, max_value=100):
    """
    Generate test cases for the 0/1 Knapsack problem.

    :param num_tests: Number of test cases to generate
    :param max_items: Maximum number of items per test case
    :param max_capacity: Maximum capacity of the knapsack
    :param max_weight: Maximum weight of an item
    :param max_value: Maximum value of an item
    :return: List of test cases
    """
    test_cases = []

    for i in range(1, num_tests + 1):
        # Incrementally set the number of items and knapsack capacity
        n = max_items * i // num_tests
        G = max_capacity * i // num_tests

        # Generate items (weight and value)
        items = [(random.randint(1, max_weight), random.randint(1, max_value)) for _ in range(n)]

        # Add the test case
        test_cases.append((n, G, items))

    return test_cases

def save_test_cases_to_files(test_cases, output_dir="tests"):
    """
    Save generated test cases to text files.

    :param test_cases: List of test cases generated by `generate_knapsack_tests`
    :param output_dir: Directory to save the test files
    """
    import os

    # Ensure the output directory exists
    os.makedirs(output_dir, exist_ok=True)

    for i, (n, G, items) in enumerate(test_cases):
        filename = os.path.join(output_dir, f"test_case_{i + 1}.txt")
        with open(filename, "w") as f:
            f.write(f"{n} {G}\n")
            for weight, value in items:
                f.write(f"{weight} {value}\n")

if __name__ == "__main__":
    # Parameters for test generation
    num_tests = 10        # Number of test cases to generate
    max_items = 100       # Maximum number of items per test case
    max_capacity = 50     # Maximum capacity of the knapsack
    max_weight = 20       # Maximum weight of an item
    max_value = 100       # Maximum value of an item

    # Generate test cases
    test_cases = generate_knapsack_tests(num_tests, max_items, max_capacity, max_weight, max_value)

    # Save test cases to files
    save_test_cases_to_files(test_cases, output_dir="tests")

    print(f"Generated {num_tests} test cases and saved them to the 'tests' directory.")
